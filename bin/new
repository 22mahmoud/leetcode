#!/bin/sh

if [ "$#" -ne 1 ]; then
  echo "Usage: $0 <slug>"
  exit 1
fi

slug="$1"

query='{
  question(titleSlug: "'"$slug"'") {
    content
    questionFrontendId
    title
    exampleTestcaseList
    metaData
    codeSnippets {
      langSlug
      code
    }
    titleSlug
    difficulty
  }
}'

fetch_game_data() {
  jq -cMn --arg query "$query" '{"query":$query}' | tr -d '\n' | xargs -0 \
    curl -s 'https://leetcode.com/graphql/' -H 'content-type: application/json' -d
}

val() {
  echo "$response" | yq -r "$1"
}

update_metadata() {
  escaped_value=$(printf '%s' "$2" | sed 's/<img/<img loading="lazy"/g' | sed 's/<p>&nbsp;<\/p>//g' | sed 's/"/\\"/g')

  yq --front-matter="process" -i ".$1 = \"$escaped_value\"" "$md_file"
}

slugify() {
  echo "$1" | sed "s/-/_/g"
}

create_markdown() {
  if [ ! -f "$md_file" ]; then
    cat <<EOF >"$md_file"
---
date: 
submission: https://leetcode.com/problems/$title_slug/submissions/
tags:
---
EOF
    echo "index.md created successfully!"
  fi
}

create_ts_file() {
  if [ ! -f "$ts_file" ]; then
    cat <<EOF >"$ts_file"
export $code_ts
EOF
    echo "index.ts created successfully!"
  fi

}

create_ts_test_file() {
  if [ ! -f "$test_file" ]; then
    cat <<EOF >"$test_file"
import { $function_name } from './index.js';

describe.each([
  { case: '', expected: 5 },
])('describe function $function_name(\$case)', ({ case, expected }) => {
  test(\`Returns \${expected}\`, () => {
    expect($function_name(case)).toBe(expected);
  });
});
EOF
    echo "index.test.ts created successfully!"
  fi

}

main() {
  response=$(fetch_game_data)

  if [ "$(echo "$response" | yq -r '.data.question')" = "null" ]; then
    echo "Error: slug '$slug' not found."
    exit 1
  fi

  content=$(val '.data.question.content')
  id=$(val '.data.question.questionFrontendId')
  title=$(val '.data.question.title')
  title_slug=$(val '.data.question.titleSlug')
  code_ts=$(val '.data.question.codeSnippets[] | select(.langSlug=="typescript") | .code')
  function_name=$(echo "$code_ts" | grep -oP 'function\s+\K\w+')

  dir_name=problems/"$id"_$(slugify "$title_slug")
  md_file="$dir_name"/index.md
  ts_file="$dir_name"/index.ts
  test_file="$dir_name"/index.test.ts

  mkdir -p "$dir_name"

  create_markdown
  create_ts_file
  create_ts_test_file

  update_metadata "id" "$(printf "%04d" "$id")"
  update_metadata "slug" "$title_slug"
  update_metadata "title-prefix" "$title"
  update_metadata "description" "$content"
}

main "$@"
